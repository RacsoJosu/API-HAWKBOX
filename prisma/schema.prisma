generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model cobros_envios {
  idCobro   Int       @id @default(autoincrement())
  peso      Float?    @db.Float
  volumen   Float?    @db.Float
  monto     Float?    @db.Float
  createdAt DateTime? @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
}

model paquetes {
  idPaquete      Int                @id @default(autoincrement())
  trakingNumber  String
  descripcion    String?            @db.VarChar(255)
  peso           Float?             @db.Float
  estado         paquetes_estado?   @default(en_camino)
  imageUrl       String             @db.Text
  idUsuario      Int
  paquetePadreId Int?
  idEmpresa      Int
  empresa        empresas_de_envios @relation(fields: [idEmpresa], references: [idEmpresa])
  usuario        usuarios           @relation(fields: [idUsuario], references: [idUsuario])
  notificaciones notificaciones[]
  transitos      transitos[]

  @@index([idEmpresa], map: "idEmpresa")
  @@index([idUsuario], map: "idUsuario")
  @@index([paquetePadreId], map: "paquetePadreId")
}

model transitos {
  idTransito  Int                  @id @default(autoincrement())
  fecha       DateTime?            @default(now()) @db.DateTime(0)
  idPaquete   Int
  idUbicacion Int
  tipoestado  transitos_ubicacion? @default(actual)
  ubicacion   ubicaciones          @relation(fields: [idUbicacion], references: [idUbicacion])
  paquete     paquetes             @relation(fields: [idPaquete], references: [idPaquete])

  @@index([idUbicacion], map: "idUbicaci√≥n")
  @@index([idPaquete], map: "idPaquete")
}

model ubicaciones {
  idUbicacion  Int         @id @default(autoincrement())
  Departamento String?     @db.VarChar(255)
  Ciudad       String?     @db.VarChar(255)
  transitos    transitos[]
}

model usuarios {
  idUsuario      Int            @id @default(autoincrement())
  nombre         String         @db.VarChar(255)
  correo         String         @unique(map: "correo_unique") @db.VarChar(255)
  contrasenia    String?        @db.VarChar(255)
  tipo           usuarios_tipo?
  numeroTelefono String?        @db.VarChar(100)
  pais           String?        @db.VarChar(255)
  ciudad         String         @db.VarChar(255)
  deviceid       String         @db.VarChar(255)
  imagenUrl      String         @db.VarChar(255)
  createdAt      DateTime?      @db.DateTime(0)
  updatedAt      DateTime?      @db.DateTime(0)

  paquetes       paquetes[]
  notificaciones notificaciones[]
}

model empresas_de_envios {
  idEmpresa Int        @id @default(autoincrement())
  nombre    String?    @db.VarChar(100)
  paquetes  paquetes[]
}

model notificaciones {
  idNotificacion Int             @id @default(autoincrement())
  titulo         String          @db.VarChar(255)
  descripcion    String          @db.Text
  tipoEstado     paquetes_estado
  idUsuario      Int
  idPaquete      Int
  usuario        usuarios        @relation(fields: [idUsuario], references: [idUsuario])
  paquete        paquetes        @relation(fields: [idPaquete], references: [idPaquete])

  @@index([idUsuario], map: "idUsuario")
  @@index([idPaquete], map: "idPaquete")
}

enum paquetes_estado {
  en_camino @map("En camino")
  entregado @map("Entregado")
  creado    @map("Creado")
}

enum usuarios_tipo {
  admin
  user
}


enum transitos_ubicacion {
  actual   @map("Actual")
  anterior @map("Anterior")
}
